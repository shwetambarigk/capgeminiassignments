MongoDB Enterprise atlas-12aq62-shard-0:PRIMARY> db.movies.find({$or:[{'year':{$lte:2000}} , {'year':{$gte:2010}}]}).pretty();
{
        "_id" : ObjectId("605046aabbee05c2ee47435d"),
        "title" : "Fight Club",
        "writer" : "Chuck Palahniuk",
        "year" : 1999,
        "actors" : [
                "Brad Pitt",
                "Edward Norton"
        ]
}
{
        "_id" : ObjectId("605046aabbee05c2ee47435e"),
        "title" : "Pulp Fiction",
        "writer" : "Quentin Tarantino",
        "year" : 1994,
        "actors" : [
                "John Travolta",
                "Uma Thurman"
        ]
}
{
        "_id" : ObjectId("605046aabbee05c2ee474360"),
        "title" : "The Hobbit: An Unexpected Journey",
        "writer" : "J.R.R. Tolkein",
        "year" : 2012,
        "franchise" : "The Hobbit"
}
{
        "_id" : ObjectId("605046aabbee05c2ee474361"),
        "title" : "The Hobbit: The Desolation of Smaug",
        "writer" : "J.R.R. Tolkein",
        "year" : 2013,
        "franchise" : "The Hobbit"
}
{
        "_id" : ObjectId("605046aabbee05c2ee474362"),
        "title" : "The Hobbit: The Battle of the Five Armies",
        "writer" : "J.R.R. Tolkein",
        "year" : 2012,
        "franchise" : "The Hobbit",
        "synopsis" : "Bilbo and Company are forced to engage in a war against an array of combatants and keep the Lonely Mountain from falling into the hands of a rising darkness."
}
MongoDB Enterprise atlas-12aq62-shard-0:PRIMARY> db.movies.update({title:"The Hobbit: An Unexpected Journey"},{$set:{synopsis:"A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwaeves to reclaim their mountain home - and the gold within it - from the dragon Smaug."}});
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
MongoDB Enterprise atlas-12aq62-shard-0:PRIMARY> db.movies.update({title: "The Hobbit: The Desolation of Smaug"}, {$set: {synopsis: "The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring."}});
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
MongoDB Enterprise atlas-12aq62-shard-0:PRIMARY> db.movies.find({$and: [{synopsis: /.Bilbo./}, {synopsis: /.^Gandalf./}]}).pretty();
MongoDB Enterprise atlas-12aq62-shard-0:PRIMARY> db.movies.find({$and: [{synopsis: /.Bilbo./}, {synopsis: /.^Gandalf./}]}).pretty();
MongoDB Enterprise atlas-12aq62-shard-0:PRIMARY> db.movies.find({$and: [{synopsis: /.Bilbo./}, {synopsis: /.^Gandalf./}]});
MongoDB Enterprise atlas-12aq62-shard-0:PRIMARY> db.movies.remove("title":"Pee Wee Herman's Big Adventure");
uncaught exception: SyntaxError: missing ) after argument list :
@(shell):1:24
MongoDB Enterprise atlas-12aq62-shard-0:PRIMARY> db.movies.remove({"title":"Pee Wee Herman's Big Adventure"});
WriteResult({ "nRemoved" : 1 })
MongoDB Enterprise atlas-12aq62-shard-0:PRIMARY> db.movies.remove({title: "Avatar"});
WriteResult({ "nRemoved" : 1 })
MongoDB Enterprise atlas-12aq62-shard-0:PRIMARY> db.createCollection('users');
{
        "ok" : 1,
        "$clusterTime" : {
                "clusterTime" : Timestamp(1615881868, 6),
                "signature" : {
                        "hash" : BinData(0,"f8Y6SDvpVtuRaPemyt0TETj/3p0="),
                        "keyId" : NumberLong("6939623859830128644")
                }
        },
        "operationTime" : Timestamp(1615881868, 6)
}
MongoDB Enterprise atlas-12aq62-shard-0:PRIMARY> show collections
employee
movies
myCustomers
users
MongoDB Enterprise atlas-12aq62-shard-0:PRIMARY> db.users.insert([
... {
... username : "GoodGuyGreg",
... first_name : "Good Guy",
... last_name : "Greg"
... },
... {
... username : "ScumbagSteve",
... full_name : {
... first : "Scumbag",
... last : "Steve",
... }
... }
... ]);
BulkWriteResult({
        "writeErrors" : [ ],
        "writeConcernErrors" : [ ],
        "nInserted" : 2,
        "nUpserted" : 0,
        "nMatched" : 0,
        "nModified" : 0,
        "nRemoved" : 0,
        "upserted" : [ ]
})
MongoDB Enterprise atlas-12aq62-shard-0:PRIMARY> db.posts.insert([
... {
... _id: 1,
... username : "GoodGuyGreg",
... title : "Passes out at party",
... body : "Wakes up early and cleans house",
... },
...
... {
... _id: 2,
... username : "GoodGuyGreg",
... title : "Steals your identity",
... body : "Raises your credit score",
... },
...
... {
... _id: 3,
... username : "GoodGuyGreg",
... title : "Reports a bug in your code",
... body : "Sends you a Pull Request",
... },
...
... {
... _id: 4,
... username : "ScumbagSteve",
... title : "Borrows something",
... body : "Sells it",
... },
...
... {
... _id: 5,
... username : "ScumbagSteve",
... title : "Borrows everything",
... body : "The end",
... },
...
... {
... _id: 6,
... username : "ScumbagSteve",
... title : "Forks your repo on github",
... body : "Sets to private",
... },
... ]);
BulkWriteResult({
        "writeErrors" : [ ],
        "writeConcernErrors" : [ ],
        "nInserted" : 6,
        "nUpserted" : 0,
        "nMatched" : 0,
        "nModified" : 0,
        "nRemoved" : 0,
        "upserted" : [ ]
})
MongoDB Enterprise atlas-12aq62-shard-0:PRIMARY> db.comments.insert([
... {
... username : "GoodGuyGreg",
... comment : "Hope you got a good deal!",
... post : 4,
... },
... {
... username : "GoodGuyGreg",
... comment : "What's mine is yours!",
... post : 5,
... },
... {
... username : "GoodGuyGreg",
... comment : "Don't violate the licensing agreement!",
... post : 6,
... },
... {
... username : "ScumbagSteve",
... comment : "It still isn't clean",
... post : 1,
... },
... {
... username : "ScumbagSteve",
... comment : "Denied your PR cause I found a hack",
... post : 3
... },
... ]);
BulkWriteResult({
        "writeErrors" : [ ],
        "writeConcernErrors" : [ ],
        "nInserted" : 5,
        "nUpserted" : 0,
        "nMatched" : 0,
        "nModified" : 0,
        "nRemoved" : 0,
        "upserted" : [ ]
})
MongoDB Enterprise atlas-12aq62-shard-0:PRIMARY> db.users.find();
{ "_id" : ObjectId("605066bfbbee05c2ee474365"), "username" : "GoodGuyGreg", "first_name" : "Good Guy", "last_name" : "Greg" }
{ "_id" : ObjectId("605066bfbbee05c2ee474366"), "username" : "ScumbagSteve", "full_name" : { "first" : "Scumbag", "last" : "Steve" } }
MongoDB Enterprise atlas-12aq62-shard-0:PRIMARY> db.users.find()pretty();
uncaught exception: SyntaxError: unexpected token: identifier :
@(shell):1:15
MongoDB Enterprise atlas-12aq62-shard-0:PRIMARY> db.users.find().pretty();
{
        "_id" : ObjectId("605066bfbbee05c2ee474365"),
        "username" : "GoodGuyGreg",
        "first_name" : "Good Guy",
        "last_name" : "Greg"
}
{
        "_id" : ObjectId("605066bfbbee05c2ee474366"),
        "username" : "ScumbagSteve",
        "full_name" : {
                "first" : "Scumbag",
                "last" : "Steve"
        }
}
MongoDB Enterprise atlas-12aq62-shard-0:PRIMARY> db.users.posts().pretty();
uncaught exception: TypeError: db.users.posts is not a function :
@(shell):1:1
MongoDB Enterprise atlas-12aq62-shard-0:PRIMARY> db.posts.find().pretty();
{
        "_id" : 1,
        "username" : "GoodGuyGreg",
        "title" : "Passes out at party",
        "body" : "Wakes up early and cleans house"
}
{
        "_id" : 2,
        "username" : "GoodGuyGreg",
        "title" : "Steals your identity",
        "body" : "Raises your credit score"
}
{
        "_id" : 3,
        "username" : "GoodGuyGreg",
        "title" : "Reports a bug in your code",
        "body" : "Sends you a Pull Request"
}
{
        "_id" : 4,
        "username" : "ScumbagSteve",
        "title" : "Borrows something",
        "body" : "Sells it"
}
{
        "_id" : 5,
        "username" : "ScumbagSteve",
        "title" : "Borrows everything",
        "body" : "The end"
}
{
        "_id" : 6,
        "username" : "ScumbagSteve",
        "title" : "Forks your repo on github",
        "body" : "Sets to private"
}
MongoDB Enterprise atlas-12aq62-shard-0:PRIMARY> db.posts.find({'author':"GoodGuyGreg'}).pretty();
uncaught exception: SyntaxError: "" literal not terminated before end of script :
@(shell):1:49
MongoDB Enterprise atlas-12aq62-shard-0:PRIMARY> db.posts.find({"author":"GoodGuyGreg"}).pretty();
MongoDB Enterprise atlas-12aq62-shard-0:PRIMARY> db.posts.find({username: "ScumbagSteve"}).pretty();
{
        "_id" : 4,
        "username" : "ScumbagSteve",
        "title" : "Borrows something",
        "body" : "Sells it"
}
{
        "_id" : 5,
        "username" : "ScumbagSteve",
        "title" : "Borrows everything",
        "body" : "The end"
}
{
        "_id" : 6,
        "username" : "ScumbagSteve",
        "title" : "Forks your repo on github",
        "body" : "Sets to private"
}
MongoDB Enterprise atlas-12aq62-shard-0:PRIMARY> db.comments.find().pretty();
{
        "_id" : ObjectId("605068a0bbee05c2ee474367"),
        "username" : "GoodGuyGreg",
        "comment" : "Hope you got a good deal!",
        "post" : 4
}
{
        "_id" : ObjectId("605068a0bbee05c2ee474368"),
        "username" : "GoodGuyGreg",
        "comment" : "What's mine is yours!",
        "post" : 5
}
{
        "_id" : ObjectId("605068a0bbee05c2ee474369"),
        "username" : "GoodGuyGreg",
        "comment" : "Don't violate the licensing agreement!",
        "post" : 6
}
{
        "_id" : ObjectId("605068a0bbee05c2ee47436a"),
        "username" : "ScumbagSteve",
        "comment" : "It still isn't clean",
        "post" : 1
}
{
        "_id" : ObjectId("605068a0bbee05c2ee47436b"),
        "username" : "ScumbagSteve",
        "comment" : "Denied your PR cause I found a hack",
        "post" : 3
}
MongoDB Enterprise atlas-12aq62-shard-0:PRIMARY> db.comments.find({username: "ScumbagSteve"}).pretty();
{
        "_id" : ObjectId("605068a0bbee05c2ee47436a"),
        "username" : "ScumbagSteve",
        "comment" : "It still isn't clean",
        "post" : 1
}
{
        "_id" : ObjectId("605068a0bbee05c2ee47436b"),
        "username" : "ScumbagSteve",
        "comment" : "Denied your PR cause I found a hack",
        "post" : 3
}
MongoDB Enterprise atlas-12aq62-shard-0:PRIMARY> db.commets.find({"author":"GoodGuyGreg"}).pretty();
MongoDB Enterprise atlas-12aq62-shard-0:PRIMARY> db.comments.find({post: db.posts.findOne({title: "Reports a bug in your code"})._id});
{ "_id" : ObjectId("605068a0bbee05c2ee47436b"), "username" : "ScumbagSteve", "comment" : "Denied your PR cause I found a hack", "post" : 3 }
MongoDB Enterprise atlas-12aq62-shard-0:PRIMARY>   